name: Deploy PR previews

on:
  issue_comment:
    types: [created]
  push:
    branches-ignore:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency: preview-${{ github.ref }}

jobs:
  deploy:
    name: Deploy website
    runs-on: ubuntu-latest
    if: ${{!contains(github.event.head_commit.message, '[skip ci]') && (contains(github.event.comment.body, 'Deploy') || contains(github.event.comment.body, 'deploy') || github.event_name == 'push' || github.event_name == 'pull_request')}}

    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm install -g pnpm surge
          pnpm install

      - name: Build site
        run: pnpm run build

      - name: Deploy to Surge
        id: deploy
        run: |
          DEPLOYMENT_DOMAIN="inflection-engineering--$(git rev-parse --short HEAD).surge.sh"
          echo "url=https://$DEPLOYMENT_DOMAIN" >> $GITHUB_OUTPUT
          surge dist/ "$DEPLOYMENT_DOMAIN"

        env:
          SURGE_LOGIN: ${{ vars.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Record deployment
        uses: actions/github-script@v8
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'preview',
              description: 'PR preview',
              auto_merge: false
            });

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: '${{ steps.deploy.outputs.url }}',
              description: 'Deployed preview'
            });
